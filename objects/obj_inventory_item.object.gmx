<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory_item</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouseOver = 0;
mode_carry = 0;
if (x &lt; room_width/2)
{
    item_owner = global.inventory_item;
}
if (x &gt; room_width/2)
{
    item_owner = global.inventory_merchant;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt;= x and mouse_y &gt;= y and mouse_x &lt;= x+23 and mouse_y &lt;= y+23)
{
    mouseOver = 1
}
else
{
    mouseOver = 0
}

if (mouse_check_button_pressed(mb_right) and mouseOver = 1 and item_id != 0)
{
    var droppedItem;
    droppedItem = instance_create(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,obj_item_new);
    droppedItem.item_id = item_id;
    droppedItem.item_name = item_name;
    droppedItem.item_description = item_description;
    droppedItem.item_value = item_value;
    droppedItem.item_sprite = item_sprite;
    scr_inventory_remove(item_owner);
    instance_destroy();
}

if (mouse_check_button_pressed(mb_left) and mouseOver == 1 )
{
    //Clicking on a player-owned item
    if (item_owner == global.inventory_item)
    {
        //Grabbing an item
        if (item_id != 0 and global.inventory_carry == 0)
        {
            global.inventory_carry_players = 1;
            global.inventory_carry = item_id;
            scr_inventory_remove(global.inventory_item);
            instance_destroy();
        }     
        //Putting an item from the players inventory back into it 
        else if global.inventory_carry != 0 and global.inventory_carry_players == 1
        {
            if item_id == 0
            {
                scr_inventory_replace(global.inventory_item, global.inventory_carry);
                global.inventory_carry = 0;
                instance_destroy();
            }
            else
            {
                global.inventory_carry_players = 1;
                scr_inventory_replace(global.inventory_item, global.inventory_carry);
                global.inventory_carry = item_id;
                instance_destroy();
            }
        }
        
        //Buying an item
        else if (item_id == 0 and global.inventory_carry != 0 and global.inventory_carry_players == 0)
        {
            if global.player_money &gt;= global.item_value[global.inventory_carry]
            {
                global.player_money -= global.item_value[global.inventory_carry];
                ds_grid_add(global.inventory_item, item_x, item_y, global.inventory_carry);
                scr_inventory_replace(global.inventory_item, global.inventory_carry);
                global.inventory_carry = 0;
                instance_destroy();
            }
        }
    }
    //Clicking on a merchant-owned item
    if (item_owner == global.inventory_merchant)
    {
        //Grabbing an item
        if (item_id != 0 and global.inventory_carry == 0)
        {
            global.inventory_carry_players = 0;
            global.inventory_carry = item_id;
            scr_inventory_remove(global.inventory_merchant);
            instance_destroy();
        }
        //Putting an item back into it
        else if (item_id == 0 and global.inventory_carry != 0 and global.inventory_carry_players == 0)
        {
            ds_grid_add(item_owner, item_x, item_y, global.inventory_carry);
            scr_inventory_replace(global.inventory_merchant, global.inventory_carry);
            global.inventory_carry = 0;
            instance_destroy();
        }
        //Selling an item
        else if (item_id == 0 and global.inventory_carry != 0 and global.inventory_carry_players == 1)
        {
            global.player_money += global.item_value[global.inventory_carry];
            ds_grid_add(global.inventory_merchant, item_x, item_y, global.inventory_carry);
            scr_inventory_replace(global.inventory_merchant, global.inventory_carry);
            global.inventory_carry = 0;
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (item_y != 0)
{
    draw_sprite(sprite_index,0,x,y);
}

if (item_y == 0)
{
    draw_sprite(spr_inventory_hotkey,0,x,y);
}

if (item_id != 0)
{
    draw_set_color(image_blend);
    draw_sprite(item_sprite,1,
        x+12+sprite_get_xoffset(item_sprite)-sprite_get_width(item_sprite)/2,
        y+12+sprite_get_yoffset(item_sprite)-sprite_get_height(item_sprite)/2)
}

if (mouseOver == 1)
{
    draw_sprite(spr_inventory_item_outline,0,x,y)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
