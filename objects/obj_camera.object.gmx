<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player) {player_xorigin = obj_player.x; player_yorigin = obj_player.y;}
//cursor_sprite = spr_ui_crossHair
window_set_cursor(cr_none)
shake_xoffset = 0
shake_yoffset = 0
screenShake = 0
screenMagnitude = 0
mouseX = 1
mouseY = 1
testX = 270
testY = 31

//CAMERA
view_width= 320;
view_height = 256;
window_set_size(view_width*global.window_scale,view_height*global.window_scale)
alarm[1] = 1;
surface_resize(application_surface,view_width*global.window_scale,view_height*global.window_scale)
display_set_gui_size(view_width*global.window_scale*global.gui_scale,view_height*global.window_scale*global.gui_scale)

if instance_exists(obj_player) { view_xview[0] = obj_player.x; view_yview[0] = obj_player.y;}

// HUD CONFIGURATION
gui_health_width = 64
gui_stamina_width = 64
camera_surface = -1;
gui_scale = (view_wport[0] / view_wview[0])



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screenShake = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouseX = mouse_x
mouseY = mouse_y

if screenShake == 1
{
    shake_xoffset = choose(irandom(screenMagnitude),-irandom(screenMagnitude))
    shake_yoffset = choose(irandom(screenMagnitude),-irandom(screenMagnitude))
}
else
{
    shake_xoffset = 0
    shake_yoffset = 0
}

view_wview[0] = view_width;
view_hview[0] = view_height;

if instance_exists(obj_player)
{
    //----------------------- CAMERA --------------------------\\     
    var _x, _y;
    _x = obj_player.x-view_width/2+shake_xoffset;
    _y = floor(obj_player.y)-view_height/2+shake_yoffset;
    view_xview[0] = _x;
    view_yview[0] = _y;
    //view_angle[0] = shake_xoffset
    gui_health_width = floor(obj_player.stat_health*72/obj_player.stat_maxhealth)
    gui_stamina_width = floor(obj_player.stat_stamina*72/obj_player.stat_maxstamina)

        
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Surface
if (surface_exists(camera_surface))
{
    surface_free(camera_surface)
    camera_surface = -1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
gui_health_x = 2
gui_health_y = 2
gui_stamina_x = 2
gui_stamina_y = 18
gui_weapons_origin_x = 2
gui_weapons_origin_y = 36
gui_weapons_spacing = 4
gui_healthBar_width = 64
*/
if instance_exists(obj_player)
{
    scr_camera_draw_text(160,31,string(obj_player.stat_health) + '/' + string(obj_player.stat_maxhealth),fa_middle)
    scr_camera_draw_text(1114,31,string(obj_player.stat_stamina) + '/' + string(obj_player.stat_maxstamina),fa_middle)
    draw_sprite_ext(spr_hud_ammo,0,4*GUISCALE,20*GUISCALE,2,2,0,image_blend,1);
    draw_sprite_ext(spr_hud_grenade,0,4*GUISCALE,28*GUISCALE,2,2,0,image_blend,1);
    scr_camera_draw_text(18*GUISCALE,20*GUISCALE, global.ammo_amount[global.item_gun_ammo_type[obj_player.gun_current]],fa_left)
    scr_camera_draw_text(18*GUISCALE,28*GUISCALE,global.missles ,fa_left)
    draw_sprite_ext(spr_ui_crosshair,5*round(obj_player.var_recoil_current),(mouse_x-view_xview[0])*GUISCALE,(mouse_y-view_yview[0])*GUISCALE,4,4,0,image_blend,1);
    if (obj_player.alarm[0] &gt; 0 and global.item_gun_cycle_delay[obj_player.gun_current] &gt;= 60)
    {
        draw_sprite_ext(spr_ui_mouse_reload,0,(mouse_x-view_xview[0])*GUISCALE,(mouse_y-view_yview[0])*GUISCALE,
            4,4,0,image_blend,obj_player.alarm[0]/global.item_gun_cycle_delay[obj_player.gun_current]);
    }
    //draw_text(16,16,string(obj_player.alarm[0]) + '/' + string(global.item_gun_cycle_delay[obj_player.gun_current]))
    //draw_text(16,48,obj_player.alarm[0]/global.item_gun_cycle_delay[obj_player.gun_current])
}
//Draw
if global.debugmode == 1
{
    scr_camera_draw_text(4,68,"Strength: " + string(global.player_trait_strength),fa_left)
    scr_camera_draw_text(4,88,"Speed: " + string(global.player_trait_speed),fa_left)
    scr_camera_draw_text(4,108,"Endurance: " + string(global.player_trait_endurance),fa_left)
    scr_camera_draw_text(4,128,"Reflexes: " + string(global.player_trait_reflexes),fa_left)
    scr_camera_draw_text(4,148,"Knowledge: " + string(global.player_trait_knowledge),fa_left)
    scr_camera_draw_text(4,168,"Speed_Current: " + string(obj_player.hspeed_current),fa_left)
    scr_camera_draw_text(4,188,"window_mouse_get: " + string(mouse_x) + " , " + string(mouse_y),fa_left)
    scr_camera_draw_text(4,208,"(X,Y) " + string(obj_player.x) + " , " + string(obj_player.y),fa_left)
    scr_camera_draw_text(4,228,"(moved) " + string(obj_player.xPrevious),fa_left)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
gui_health_x = 2
gui_health_y = 2
gui_weapons_origin_x = 2
gui_weapons_origin_y = 18
gui_weapons_spacing = 4
gui_healthBar_width = 64
//Draw Healthbar
draw_sprite_stretched(spr_gui_healthBack,0,view_xview[0]+gui_health_x-1,view_yview[0]+gui_health_y-1,gui_healthBar_width+1,gui_health_y+11)
draw_sprite_ext(spr_gui_healthBar,0,view_xview[0]+gui_health_x,view_yview[0]+gui_health_y,gui_healthBar_width,1,0,image_blend,1)

//Draw Healthbar
draw_sprite_stretched(spr_gui_healthBack,0,view_xview[0]+gui_stamina_x-1,view_yview[0]+gui_stamina_y-1,gui_healthBar_width+1,gui_stamina_y+11)
draw_sprite_ext(spr_gui_staminaBar,0,view_xview[0]+gui_stamina_x,view_yview[0]+gui_stamina_y,gui_healthBar_width,1,0,c_yellow,1)
*/

var x1, y1, w1;
x1 = view_xview[0];
y1 = view_yview[0];
w1 = view_wview[0];

draw_sprite(spr_gui_example,0,x1,y1+2)
draw_sprite_ext(spr_gui_healthBar,0,x1+5,y1+5,max(gui_health_width,0),1,0,image_blend,1)
draw_sprite_ext(spr_gui_staminaBar,0,x1+243,y1+5,max(gui_stamina_width,0),1,0,image_blend,1)

/*
draw_sprite(global.item_animation[global.equip_slot[1]],1,x1+84,y1+8)
draw_sprite(global.item_animation[global.equip_slot[2]],1,x1+116,y1+8)
draw_sprite(global.item_animation[global.equip_slot[3]],1,x1+148,y1+8)
draw_sprite(global.item_animation[global.equip_slot[4]],1,x1+180,y1+8)
draw_sprite(global.item_animation[global.equip_slot[5]],1,x1+212,y1+8)
*/

sprite[1] = global.item_animation[global.equip_slot[1]];
sprite[2] = global.item_animation[global.equip_slot[2]];
sprite[3] = global.item_animation[global.equip_slot[3]];
sprite[4] = global.item_animation[global.equip_slot[4]];
sprite[5] = global.item_animation[global.equip_slot[5]];

for (sprites = 1; sprites &lt; 6; sprites++)
{
    draw_sprite(sprite[sprites],1,
        x1+96+(32*(sprites-1))+sprite_get_xoffset(sprite[sprites])-sprite_get_width(sprite[sprites])/2,
        y1+10+sprite_get_yoffset(sprite[sprites])-sprite_get_height(sprite[sprites])/2)
}




//Draw Mouse
draw_set_color(c_black)
/*if global.inventory_state == 0
{
    draw_sprite(spr_ui_crossHair,0,mouse_x,mouse_y)
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
